plugins {
    id "fabric-loom"
}

loom {
    accessWidener = file("src/main/resources/architectury-common.accessWidener")
}

dependencies {
    minecraft "com.mojang:minecraft:${rootProject.architect.minecraft}"
    mappings minecraft.officialMojangMappings()
    // We depend on fabric loader here to use the fabric @Environment annotations
    // Do NOT use other classes from fabric loader
    modCompile "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    implementation "net.jodah:typetools:0.6.2"
}

architect {
    common(false)
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

task javadocs(type: Javadoc) {
    source = sourceSets.main.allJava
}

task javadocsJar(type: Jar, dependsOn: javadocs) {
    archiveClassifier.set("javadocs")
    javadocs.failOnError false
    from javadocs.destinationDir
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifact(file("${project.buildDir}/libs/${project.archivesBaseName}-${project.version}.jar")) {
                builtBy build
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
            artifact javadocsJar
        }
    }
}